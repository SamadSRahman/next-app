/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
    customers: CustomerAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    customers: Customer;
    products: Product;
    categories: Category;
    about: About;
    subCategories: SubCategory;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  locale: null;
  user:
    | (User & {
        collection: 'users';
      })
    | (Customer & {
        collection: 'customers';
      });
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
export interface CustomerAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  cloudinaryUrl?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  name: string;
  address?:
    | {
        line1: string;
        line2?: string | null;
        city: string;
        state: string;
        zip: string;
        id?: string | null;
      }[]
    | null;
  cart?:
    | {
        product?: (number | null) | Product;
        quantity?: number | null;
        id?: string | null;
      }[]
    | null;
  wishlists?: (number | Product)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  productName?: string | null;
  brandName?: string | null;
  brandLogo?: (number | null) | Media;
  variant?:
    | {
        markedPrice?: number | null;
        sellingPrice?: number | null;
        discount?: number | null;
        maxPurchaseBySingleUser?: number | null;
        inStock?: boolean | null;
        offers?:
          | {
              offer?: string | null;
              terms?:
                | {
                    terms?: string | null;
                    id?: string | null;
                  }[]
                | null;
              isOfferValid?: boolean | null;
              id?: string | null;
            }[]
          | null;
        color?: string | null;
        images?:
          | {
              image?: (number | null) | Media;
              id?: string | null;
            }[]
          | null;
        description?: string | null;
        sizes?:
          | {
              size?: string | null;
              id?: string | null;
            }[]
          | null;
        features?:
          | {
              feature?: string | null;
              id?: string | null;
            }[]
          | null;
        technicalDetails?:
          | {
              title?: string | null;
              description?: string | null;
              id?: string | null;
            }[]
          | null;
        reviews?:
          | {
              rating: number;
              reviewText: string;
              customerName: string;
              createdAt: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  subcategory?: (number | null) | SubCategory;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "subCategories".
 */
export interface SubCategory {
  id: number;
  name: string;
  description?: string | null;
  image?: (number | null) | Media;
  products?: (number | Product)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  description?: string | null;
  image: number | Media;
  subcategories?: (number | SubCategory)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "about".
 */
export interface About {
  id: number;
  heroSection: {
    headline: string;
    subheading: string;
    backgroundImage?: (number | null) | Media;
    ctaButton?: string | null;
  };
  missionSection: {
    missionStatement: string;
    missionImage?: (number | null) | Media;
  };
  storySection?:
    | {
        year: string;
        description?: string | null;
        milestoneImage?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  valuesSection?:
    | {
        valueTitle: string;
        valueDescription?: string | null;
        icon?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  teamSection?:
    | {
        teamMemberName: string;
        bio?: string | null;
        teamMemberImage?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  testimonialsSection?:
    | {
        testimonial: string;
        customerName?: string | null;
        customerImage?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user:
    | {
        relationTo: 'users';
        value: number | User;
      }
    | {
        relationTo: 'customers';
        value: number | Customer;
      };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}